library(vegan)
library(MASS)
## loading the data sets##
Willows<-read.csv("Willows.csv",header = TRUE,row.names = 1)  # read csv file
Arthropods<-read.csv("Arthropods.csv",header = TRUE,row.names = 1)  # read csv file
head(Willows)
levels(Willows$Genotype)
##species richness###
richness<-specnumber(Arthropods)##calculates species richness for all sites
boxplot(specnumber(Arthropods) ~ Willows$Genotype, xlab="Genotype", ylab = "# of species") ## plots species richness by varying moisture##
m1<-lm(richness~Genotype, data=Willows)
anova(m1)
##Shannons diversity##
ShannondD<-diversity(Arthropods)
boxplot(diversity(Arthropods) ~ Willows$Genotype, xlab="Genotype", ylab = "Shannon Diversity Index") ## plots species diversity by management treatment##
m2<-lm(ShannondD~Genotype, data=Willows)
anova(m2)
##species evenness##
Evenness<- diversity(Arthropods)/log(specnumber(Arthropods)) ##Pielou's evenness index##
boxplot(Evenness~ Willows$Genotype, xlab="Genotype", ylab = "Evenness") ## plots evenness by management treatment##
m3<-lm(Evenness~Genotype, data=Willows)
anova(m3)
##bray curtis dissimilarity##
bc<-vegdist(Arthropods, method="bray", binary=FALSE) #bray-curtis dissimilarity##
bc
##NMDS ordination##
par(mfrow=c(1,1))
ordination <- metaMDS(Arthropods, dist = "bray")
ordiplot(ordination, display = "sites", type="none")#comes up as a blank box
points(ordination, "sites", pch = 15, col = "purple", select = Willows$Gender == "f") #looking at willow sex
points(ordination, "sites", pch = 15, col = "black", select = Willows$Gender == "m")
legend("topleft", inset=.06, bty="n", c("female", "male"),col = c("purple", "black"), text.col = "black", pch = c(15,15),merge = TRUE,horiz = FALSE)
###option 1### are any obvious groupings with the genotypes
ordiplot(ordination, display = "sites", type="none")
points(ordination, "sites", pch = "N", col = "orange", select = Willows$Genotype == "N")
points(ordination, "sites", pch = "O", col = "blue violet", select = Willows$Genotype == "O")
points(ordination, "sites", pch = "P", col = "yellow", select = Willows$Genotype == "P")
points(ordination, "sites", pch = "Q", col = "black", select = Willows$Genotype == "Q")
points(ordination, "sites", pch = "R", col = "teal", select = Willows$Genotype == "R")
points(ordination, "sites", pch = "S", col = "blue", select = Willows$Genotype == "S")
points(ordination, "sites", pch = "*", col = "red", select = Willows$Genotype == "star")
points(ordination, "sites", pch = "X", col = "purple", select = Willows$Genotype == "X")
points(ordination, "sites", pch = "Y", col = "green", select = Willows$Genotype == "Y")
points(ordination, "sites", pch = "Z", col = "red", select = Willows$Genotype == "Z")
###option 2###
ordiplot(ordination, display = "sites", type="none")
points(ordination, "sites", pch = 17, col = "blue violet", select = Willows$Genotype == "N")
points(ordination, "sites", pch = 2, col = "blue violet", select = Willows$Genotype == "O")
points(ordination, "sites", pch = 1, col = "black", select = Willows$Genotype == "P")
points(ordination, "sites", pch = 16, col = "black", select = Willows$Genotype == "Q")
points(ordination, "sites", pch = 16, col = "blue", select = Willows$Genotype == "R")
points(ordination, "sites", pch = 1, col = "blue", select = Willows$Genotype == "S")
points(ordination, "sites", pch = 16, col = "red", select = Willows$Genotype == "star")
points(ordination, "sites", pch = 16, col = "green", select = Willows$Genotype == "X")
points(ordination, "sites", pch = 1, col = "green", select = Willows$Genotype == "Y")
points(ordination, "sites", pch = 1, col = "red", select = Willows$Genotype == "Z")
legend("bottomleft", inset=.06, bty="n", c("N", "O", "P", "Q", "R", "S", "Star", "X", "Y", "Z"),col = c("blue violet", "blue violet", "black", "black", "blue", "blue", "red", "green", "green", "red"), text.col = "black", pch = c(17,2,1,16,16,1,16,16,1,1))
##vectors##
fit1<-envfit(ordination~Biomass+SLA+Chlorophyll+Toughness,Willows)
plot(fit1,col = "black", cex=1.1, axis=TRUE)
fit1
##MRPP##
mrpp1 <- mrpp(Arthropods, Willows$Genotype, distance = "bray")
mrpp1
# for gender
mrpp1 <- mrpp(Arthropods, Willows$Gender, distance = "bray")
mrpp1
###permanova##
permanova<-adonis(bc~Genotype,data=Willows,perm=200) ##
permanova
Willows <- read.csv("D:/Willows.csv")
View(Willows)
head(Willows)
levels(Willows$Genotype)
Arthropods <- read.csv("D:/Arthropods.csv", header=F)
View(Arthropods)
head(arthropods)
head(Arthropods)
library(vegan)
library(MASS)
##species richness###
richness<-specnumber(Arthropods)##calculates species richness for all sites
boxplot(specnumber(Arthropods) ~ Willows$Genotype, xlab="Genotype", ylab = "# of species") ## plots species richness by varying moisture##
m1<-lm(richness~Genotype, data=Willows)
anova(m1)
setwd("E:/eeb 416 Exam 1/question10_files")
exon<- read.delim("exon_only.txt", header=FALSE) #read in exon dataset, no header
head(exon)
tail(exon)
exon <- subset( exon, select = -2 ) #removing ensmble column
transcript <- read.delim("transcript_only.txt", header=FALSE) #read in transcript dataset, no header
transcript <- subset( transcript, select = -2 ) #removing ensmble column in transcript file
colnames(exon)[3] <- "start.bp" #changing column name to start bp in exon file
colnames(exon)[4] <- "end.bp" #changing column name to end bp in exon file
colnames(exon)[1] <- "chr" #changing column name to chromosome
colnames(exon)[2] <- "feature"
exon$length <- exon$end.bp - exon$start.bp #creating a new column that calculates the length of exon from the ending bp and start bp
head(exon) #checking to see if length column is in exon file
#repeating above steps for transcript file
colnames(transcript)[3] <- "start.bp" #changing column name to start bp in transcript file
colnames(transcript)[4] <- "end.bp" #changing column name to end bp in transcript file
transcript$length <- transcript$end.bp - transcript$start.bp
head(transcript) #checking to see if length column is in transcript file
exon<- read.delim("exon_only.txt", header=TRUE) #read in exon dataset, no header
exon<- read.delim("Homo_sapiens.GRCh38.82.abinitio.exon_only.gtf", header=TRUE) #read in exon dataset, no header
head(exon)
exon<- read.delim("Homo_sapiens.GRCh38.82.abinitio.exon_only.gtf", header=FALSE) #read in exon dataset, no header
head(exon)
exon <- subset( exon, select = -2,-6,-7,-8 ) #removing ensmble column
?subset
exon <- subset( exon, select = -2, 6:8) #removing ensmble column
exon <- subset( exon, select = -2) #removing ensmble column
head(exon)
exon <- subset(exon, select= -6)
exon <- subset(exon, select= -6)
head(exon)
exon <- subset( exon, select = -2) #removing ensmble column
head(exon)
exon<- read.delim("Homo_sapiens.GRCh38.82.abinitio.exon_only.gtf", header=FALSE) #read in exon dataset, no header
head(exon)
colnames(exon)[3] <- "start.bp" #changing column name to start bp in exon file
colnames(exon)[4] <- "end.bp" #changing column name to end bp in exon file
colnames(exon)[1] <- "chr" #changing column name to chromosome
colnames(exon)[2] <- "feature"
exon$length <- exon$end.bp - exon$start.bp #creating a new column that calculates the length of exon from the ending bp and start bp
head(exon) #checking to see if length column is in exon file
#repeating above steps for transcript file
colnames(transcript)[3] <- "start.bp" #changing column name to start bp in transcript file
colnames(transcript)[4] <- "end.bp" #changing column name to end bp in transcript file
transcript$length <- transcript$end.bp - transcript$start.bp
head(transcript) #checking to see if length column is in transcript file
transcript <- read.delim("Homo_sapiens.GRCh38.82.abinitio.transcript_only.gtf", header=FALSE) #read in transcript dataset, no header
colnames(exon)[3] <- "start.bp" #changing column name to start bp in exon file
colnames(exon)[4] <- "end.bp" #changing column name to end bp in exon file
colnames(exon)[1] <- "chr" #changing column name to chromosome
colnames(exon)[2] <- "feature"
exon$length <- exon$end.bp - exon$start.bp #creating a new column that calculates the length of exon from the ending bp and start bp
head(exon) #checking to see if length column is in exon file
#repeating above steps for transcript file
colnames(transcript)[3] <- "start.bp" #changing column name to start bp in transcript file
colnames(transcript)[4] <- "end.bp" #changing column name to end bp in transcript file
transcript$length <- transcript$end.bp - transcript$start.bp
head(transcript) #checking to see if length column is in transcript file
exon$length <- (exon$end.bp - exon$start.bp)
exon$length <- exon$end.bp - exon$start.bp #creating a new column that calculates the length of exon from the ending bp and start bp
exon$length <- (exon$end.bp) - (exon$start.bp)
1-2
2-1
exon$length <- ((exon$end.bp) - (exon$start.bp))
colnames(exon)[3] <- "start.bp" #changing column name to start bp in exon file
colnames(exon)[4] <- "end.bp" #changing column name to end bp in exon file
colnames(exon)[1] <- "chr" #changing column name to chromosome
colnames(exon)[2] <- "feature"
head(exon)
colnames(exon)[4] <- "start.bp" #changing column name to start bp in exon file
colnames(exon)[5] <- "end.bp" #changing column name to end bp in exon file
colnames(exon)[1] <- "chr" #changing column name to chromosome
colnames(exon)[3] <- "feature"
head(exon)
exon$length <- exon$end.bp - exon$start.bp #creating a new column that calculates the length of exon from the ending bp and start bp
head(exon)
head(transcript)
colnames(transcript)[3] <- "start.bp" #changing column name to start bp in transcript file
colnames(transcript)[4] <- "end.bp" #changing column name to end bp in transcript file
colnames(exon)[1] <- "chr" #changing column name to chromosome
colnames(exon)[3] <- "feature"
head(transcript)
transcript$length <- transcript$end.bp - transcript$start.bp
colnames(transcript)[4] <- "start.bp" #changing column name to start bp in transcript file
colnames(transcript)[5] <- "end.bp" #changing column name to end bp in transcript file
colnames(exon)[1] <- "chr" #changing column name to chromosome
colnames(exon)[3] <- "feature"
transcript$length <- transcript$end.bp - transcript$start.bp
head(transcript) #checking to see if length column is in transcript file
transcript$length <- transcript$end.bp - transcript$start.bp
colnames(transcript)[4] <- "start.bp" #changing column name to start bp in transcript file
colnames(transcript)[5] <- "end.bp" #changing column name to end bp in transcript file
colnames(transcript)[1] <- "chr" #changing column name to chromosome
colnames(transcript)[3] <- "feature"
transcript$length <- transcript$end.bp - transcript$start.bp
head(transcript) #checking to see if length column is in transcript file
e.mean <- aggregate(exon [ ,10], list(exon$chr), mean)
head(e.mean)
t.mean <- aggregate(transcript [ ,10], list(transcript$chr), mean)
head(t.mean)
std.err <- function(x) {sd(x)/sqrt(length(x))} #standard error equation
exon_std.err <- aggregate(exons[ ,10], list(exons$Chromosome), std.err) #calculationg standard error for exons
exon_std.err <- aggregate(exon[ ,10], list(exon$chr), std.err) #calculationg standard error for exons
head(exon_std.err)
transcript_std.err <- aggregate(transcript[ ,10], list(transcript$chr, std.err) #calculating standard error for transcripts
klkl
transcript_std.err <- aggregate(transcript[ ,10], list(transcript$chr), std.err) #calculating standard error for transcripts
head(transcript_std.err)
exon_merged <- merge(e.mean, exon_std.err, by.x="Group.1", by.y="Group.1")
head(exon_merged)
exon_merge <- merge(e.mean, exon_std.err, by.x="Group.1", by.y="Group.1")
transcript_merge <- merge(t.mean, transcript_std.err, by.x = "Group.1", by.y = "Group.1")
exon_transcript_merge <- merge(exon_merge, transcript_merge, by.x="Group.1", by.y="Group.1")
names(both_merged) <- c("chromosome", "exon_length", "standard error", "transcript length", "standard error")
names(exon_transcript_merge) <- c("chromosome", "exon_length", "standard error", "transcript length", "standard error")
exon_transcript_merge
names(exon_transcript_merge) <- c("chr", "exon_length", "exon_std.err", "transcript_length", "transcript_std.err")
head(exon_transcript_merge)
exon_merge <- merge(e.mean, exon_std.err, by.x="Group.1", by.y="Group.1") #merging mean length and standard error in exon file
head(exon_merge)
exon_merge <- merge(e.mean, exon_std.err, by.x="chr", by.y="chr") #merging mean length and standard error in exon file
exon_merge <- merge(e.mean, exon_std.err, by.x="Group.1", by.y="Group.1") #merging mean length and standard error in exon file
transcript_merge <- merge(t.mean, transcript_std.err, by.x = "Group.1", by.y = "Group.1") #merging mean leangth and standard error in transcript file
exon_transcript_merge <- merge(exon_merge, transcript_merge, by.x="Group.1", by.y="Group.1")
tail(exon_transcript_merge)
exon_transcript_merge_chronly <- exon_transcript_merge[-23:-383,] #getting rid of weird non-chromosome rows
head(exon_transcript_merge_chronly)
names(exon_transcript_merge) <- c("chr", "exon_length", "exon_std.err", "transcript_length", "transcript_std.err")
exon_transcript_merge_chronly <- exon_transcript_merge[-23:-383,] #getting rid of weird non-chromosome rows
head(exon_transcript_merge_chronly)
exon_transcript_merge_chronly
m.length.table <- as.table(as.matrix(exon_transcript_merge_chronly))
m.length.table
data.class(exon_transcript_merge_chronly)
x_exon_length <- subset(exon, exon$chr=='X')
x_exon_length
X_y_exon_lengths <- subset(exon, exon$chr=='X' | exon$chr=='Y')
x_y_exon_lengths <- subset(exon, exon$chr=='X' | exon$chr=='Y')
x_y_exon_lengths_adj <- subset(x_y_exon_lengths,x_y_exon_lengths$length < 2500)
head(X_Y_exon_lengths) #checking to make sure "X" chromosome was taken
head(x_y_exon_lengths) #checking to make sure "X" chromosome was taken
tail(x_y_exon_lengths) #checking for "Y"
x_exon_length <- subset(exon, exon$chr=='X')
y_exon_length <- subset(exon, exons$chr=='Y')
x_y_exon_length <- subset(exon, exon$chr=='X' | exon$chr=='Y') #subsetting to get rid of non-sex chromosomes
head(x_y_exon_length) #checking to make sure "X" chromosome was taken
tail(x_y_exon_length) #checking for "Y"
y_exon_length <- subset(exon, exon$chr=='Y')
x_y_exon_length <- subset(exon, exon$chr=='X' | exon$chr=='Y') #subsetting to get rid of non-sex chromosomes
head(x_y_exon_length) #checking to make sure "X" chromosome was taken
tail(x_y_exon_length) #checking for "Y"
```{r histogram, tidy=TRUE, tidy.opts=list(width.cutoff=55), echo=TRUE}
install.packages("ggplot2",repos = "http://cran.rstudio.com/")
library(ggplot2)
ggplot(x_y_exon_length, aes(x_y_exon_length$length, fill = x_y_exon_length$chr)) + geom_histogram(binwidth=1) + geom_density(alpha = 0.1)
exon<- read.delim("Homo_sapiens.GRCh38.82.abinitio.exon_only.gtf", header=FALSE) #read in exon dataset, no header
transcript <- read.delim("Homo_sapiens.GRCh38.82.abinitio.transcript_only.gtf", header=FALSE) #read in transcript dataset, no header
exon<- read.delim("Homo_sapiens.GRCh38.82.abinitio.exon_only.gtf", header=FALSE) #read in exon dataset, no header
get(wd)
getwd()
hist + labs(x=Exon Lengths)
hist<-ggplot(x_y_exon_length, aes(x_y_exon_length$length, fill = x_y_exon_length$chr)) + geom_histogram(binwidth=1) + geom_density(alpha = 0.1)
hist + labs(x=Exon Lengths)
hist + labs(x="Exon Lengths")
hist + labs(y="Frequency Count")
hist + labs(x="Exon Lengths")
hist + labs(y="Frequency Count")
install.packages("ggplot2",repos = "http://cran.rstudio.com/") #install ggplot
library(ggplot2) #load ggplot to session
hist<-ggplot(x_y_exon_length, aes(x_y_exon_length$length, fill = x_y_exon_length$chr)) + geom_histogram(binwidth=1) + geom_density(alpha = 0.1)
hist + labs(x="Exon Lengths", y="Frequency Count")
hist + labs(x="Exon Lengths", y="Frequency Count", color="X and Y")
hist + labs(x="Exon Lengths", y="Frequency Count", colour="X and Y")
exons_and_transcripts <- read.delim("Homo_sapiens.GRCh38.82.abinitio.bed", header = FALSE)
head(exons_and_transcripts)
chr.length <- read.delim("Homo_sapiens.GRCh38.82.abinitio.bed", header = FALSE)
names(chr.length) <- c("chr", "feature", "start.bp", "end.bp")
head(chr.length)
start_position <- aggregate(exons_and_transcripts$Start, by = list(exons_and_transcripts$Chromosome), min) #finding smallest value in start for each chromosome
start_position <- aggregate(chr.length$start.bp, by = list(chr.length$chr), min) #finding smallest value in start for each chromosome
head(start_position)
end_position <- aggregate(chr.length$start.bp, by = list(chr.length$chr), max)
start_and_end <- merge(start_position, end_position, by.x="Group.1", by.y="Group.1")
names(start_and_end) <- c("chromosome", "start", "end")
start_end <- merge(start_position, end_position, by.x="Group.1", by.y="Group.1")
names(start_end) <- c("chromosome", "start", "end")
start_end$chromosomelength <- (start_end$end - start_end$start) #making new row of chromosome length based on max base pair minus min base pair
start_and_end_chromosomes_only <- start_and_end[-23:-383,] #getting rid of non-chromosome rows
head(start_and_end_chromosomes_only) #checking
exon_means_for_merge <- exon_means[-23:-383,]
exon_means_for_merge <- exon_mean[-23:-383,]
e.mean_merge <- e.mean[-23:-383,]
head(e.mean_merge)
names(e.mean_merge) <- c("chr", "mean.e.length")
head(e.mean_merge)
e.mean_chr_length <- merge(start_and_end_chromosomes_only, e.mean_merge, by.x = "chromosome", by.y = "chromosome")
e.mean_chr_length <- merge(start_and_end_chromosomes_only, e.mean_merge, by.x = "chr", by.y = "chr")
names(e.mean_merge) <- c("chr", "mean.e.length")
e.mean_chr_length <- merge(start_and_end_chromosomes_only, e.mean_merge, by.x = "chr", by.y = "chr")
head(start_and_end_chromosomes_only)
e.mean_chr_length <- merge(start_and_end_chromosomes_only, e.mean_merge, by.x = "chr", by.y = "chr")
chr.length <- read.delim("Homo_sapiens.GRCh38.82.abinitio.bed", header = FALSE)
names(chr.length) <- c("chr", "feature", "start.bp", "end.bp")
start_position <- aggregate(chr.length$start.bp, by = list(chr.length$chr), min) #finding smallest value in start for each chromosome
end_position <- aggregate(chr.length$start.bp, by = list(chr.length$chr), max)
start_end <- merge(start_position, end_position, by.x="Group.1", by.y="Group.1")
names(start_end) <- c("chr", "start", "end")
start_end$chromosomelength <- (start_end$end - start_end$start) #making new row of chromosome length based on max base pair minus min base pair
start_end_chromosomes_only <- start_and_end[-23:-383,] #getting rid of non-chromosome rows
e.mean_merge <- e.mean[-23:-383,]
names(e.mean_merge) <- c("chr", "mean.e.length")
e.mean_chr_length <- merge(start_and_end_chromosomes_only, e.mean_merge, by.x = "chr", by.y = "chr")
head(e.mean_merge)
e.mean_chr_length <- merge(start_end_chromosomes_only, e.mean_merge, by.x = "chr", by.y = "chr")
start_end_chromosomes_only <- start_end[-23:-383,] #getting rid of non-chromosome rows
e.mean_chr_length <- merge(start_end_chromosomes_only, e.mean_merge, by.x = "chr", by.y = "chr")
head(start_end)
chr.length <- read.delim("Homo_sapiens.GRCh38.82.abinitio.bed", header = FALSE)
names(chr.length) <- c("chr", "feature", "start.bp", "end.bp")
start_position <- aggregate(chr.length$start.bp, by = list(chr.length$chr), min) #finding smallest value in start for each chromosome
end_position <- aggregate(chr.length$start.bp, by = list(chr.length$chr), max)
start_end <- merge(start_position, end_position, by.x="Group.1", by.y="Group.1")
names(start_end) <- c("chr", "start", "end")
start_end$chromosomelength <- (start_end$end - start_end$start) #making new row of chromosome length based on max base pair minus min base pair
start_end_chromosomes_only <- start_end[-23:-383,] #getting rid of non-chromosome rows
e.mean_merge <- e.mean[-23:-383,]
names(e.mean_merge) <- c("chr", "mean.e.length")
e.mean_chr_length <- merge(start_end_chromosomes_only, e.mean_merge, by.x = "chr", by.y = "chr")
plot(e.mean_chr_length$chr.length, e.mean_chr_length$mean.e.length, main="Scatterplot of Mean Exon Length vs. Chromosome Length", xlab = "Chromosome Length", ylab = "Exon Length")
abline(lm(e.mean_chr_length$chr.length~e.mean_chr_length$mean.e.length),col="blue") #adding trendline
cor(exon_means_chromosome_lengths$chromosomelength, exon_means_chromosome_lengths$mean_exon_length)
plot(e.mean_chr_length$chr.length, e.mean_chr_length$mean.e.length, main="Scatterplot of Mean Exon Length vs. Chromosome Length", xlab = "Chromosome Length", ylab = "Exon Length")
plot(e.mean_chr_length$chr.length, e.mean_chr_length$mean.e.length, main="Scatterplot of Mean Exon Length vs. Chromosome Length", xlab = "Chromosome Length", ylab = "Exon Length")
e.mean_merge <- e.mean[-23:-383,]
chr.length <- read.delim("Homo_sapiens.GRCh38.82.abinitio.bed", header = FALSE)
names(chr.length) <- c("chr", "feature", "start.bp", "end.bp")
start_position <- aggregate(chr.length$start.bp, by = list(chr.length$chr), min) #finding smallest value in start for each chromosome
end_position <- aggregate(chr.length$start.bp, by = list(chr.length$chr), max)
start_end <- merge(start_position, end_position, by.x="Group.1", by.y="Group.1")
names(start_end) <- c("chr", "start", "end")
start_end$chromosomelength <- (start_end$end - start_end$start) #making new row of chromosome length based on max base pair minus min base pair
start_end_chromosomes_only <- start_end[-23:-383,] #getting rid of non-chromosome rows
e.mean_merge <- e.mean[-23:-383,]
names(e.mean_merge) <- c("chr", "mean.e.length")
e.mean_chr_length <- merge(start_end_chromosomes_only, e.mean_merge, by.x = "chr", by.y = "chr")
plot(e.mean_chr_length$chr.length, e.mean_chr_length$mean.e.length, main="Scatterplot of Mean Exon Length vs. Chromosome Length", xlab = "Chromosome Length", ylab = "Exon Length")
abline(lm(e.mean_chr_length$chr.length~e.mean_chr_length$mean.e.length),col="blue") #adding trendline
cor(exon_means_chromosome_lengths$chromosomelength, exon_means_chromosome_lengths$mean_exon_length)
plot(e.mean_chr_length$chr.length, e.mean_chr_length$mean.e.length, main="Scatterplot of Mean Exon Length vs. Chromosome Length", xlab = "Chromosome Length", ylab = "Exon Length")
head(e.mean_chr_length)
plot(e.mean_chr_length$chromosomelength, e.mean_chr_length$mean.e.length, main="Scatterplot of Mean Exon Length vs. Chromosome Length", xlab = "Chromosome Length", ylab = "Exon Length")
abline(lm(e.mean_chr_length$chromosomelength~e.mean_chr_length$mean.e.length),col="blue") #adding trendline
cor(e.mean_chr_length$chromosomelength, e.mean_chr_length$mean.e.length)
abline(lm(e.mean_chr_length$chromosomelength~e.mean_chr_length$mean.e.length),col="blue") #adding trendline
Because the correlation coefficient is `r correlation`, there does not appear to be a significant relationship.
